package unsw.graphics.world;

import com.jogamp.newt.event.KeyEvent;
import com.jogamp.newt.event.KeyListener;
import com.jogamp.opengl.GL3;
import unsw.graphics.CoordFrame3D;
import unsw.graphics.Shader;
import unsw.graphics.geometry.Point3D;

public class WorldCamera implements KeyListener {
    private float x;
    private float y;
    private float z;
    private float myAngle; // Only rotate around y-axis
    //line of sight
    float losx;
    float losy;
    float losz;
    private Terrain myTerrain;
    private CoordFrame3D viewFrame;

    public WorldCamera(Terrain terrain) {
        x = -terrain.getWidth()/2f;
        y = 0f;
        z = -terrain.getDepth()*2f;
        myAngle = 0;
        myTerrain = terrain;
        viewFrame = CoordFrame3D.identity();
        losx = 1;
        losy = 0;
        losz = -1;
    }

    public void setView(GL3 gl, CoordFrame3D frame) {
        Shader.setViewMatrix(gl, viewFrame.getMatrix());
    }

    @Override
    public void keyPressed(KeyEvent e) {
        switch (e.getKeyCode()) {
            case KeyEvent.VK_LEFT:
                myAngle -= 5;
                break;

            case KeyEvent.VK_RIGHT:
                myAngle += 5;
                break;

            case KeyEvent.VK_DOWN:
            	x += losx * 0.1;
                z += losz * 0.1;
                if (inMap()) {
                    y = myTerrain.computeAltitude(x, z) + 0.5f;
                }
                break;

            case KeyEvent.VK_UP:
                //myPos = myPos.translate(.1f * (float) Math.sin(Math.toRadians(-myAngle)) * 5, 0, .1f * (float) Math.cos(Math.toRadians(-myAngle)) * 5);
            	x -= losx * 0.1;
                z -= losz * 0.1;
                if (inMap()) {
                    y = myTerrain.computeAltitude(x, z) + 0.5f;
                }
            	break;
        }
        
        if (-myPos.getX() >= 0 && -myPos.getX() <= myTerrain.getWidth() - 1 && -myPos.getZ() >= 0 && -myPos.getZ() <= myTerrain.getDepth() - 1) {
            myPos = new Point3D(myPos.getX(), (float) -myTerrain.getGridAltitude(Math.round(-myPos.getX()), Math.round(-myPos.getZ())), myPos.getZ());
            
        }
        viewFrame = CoordFrame3D.identity().rotateY(myAngle);
        viewFrame = viewFrame.translate(myPos);

    }

    @Override
    public void keyReleased(KeyEvent e) {
    }
    
    public double getEyeX(){
    	return x;
        
    }

    public double getY() {
    	return y + 1.5;
    }

    public double getEyeZ() {
    	return z;
    }

    public double getCenterX() {
    	return x + losx;
    }

    public double getCenterZ() {
        return z + losz;
       
    }
    public boolean inMap() {
        double x = this.x;
        double z = this.z;
        double size = myTerrain.getWidth() -1;
        return x >= 0 && z >= 0 && z < size && x < size;
    }

}
